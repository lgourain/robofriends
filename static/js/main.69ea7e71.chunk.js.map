{"version":3,"sources":["actions.js","api/api.js","constants.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/Home.js","containers/Geolocation.js","containers/Photo.js","containers/PushNotification.js","containers/Posts.js","containers/Albums.js","containers/App.js","reducers.js","index.js"],"names":["requestRobots","dispatch","link","type","fetch","then","response","json","data","payload","catch","error","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","aria-label","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","info","this","setState","Component","Home","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","ErrorBoundry","connect","searchRobots","event","target","value","Geolocation","useState","longitude","latitude","location","setLocation","showPosition","position","console","log","coords","manageError","err","onClick","navigator","geolocation","getCurrentPosition","timeout","Photo","imageCapture","mediaStream","mediaStreamTrack","mediaDevices","getUserMedia","video","facingMode","exact","stream","document","querySelector","srcObject","onloadedmetadata","e","play","getVideoTracks","ImageCapture","width","img","takePhoto","blob","URL","createObjectURL","onload","revokeObjectURL","PushNotification","subscription","setSubscription","urlB64ToUint8Array","base64String","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","charCodeAt","subscribeToPushManager","registration","pushManager","subscribe","userVisibleOnly","applicationServerKey","subscriptionJson","JSON","stringify","Notification","requestPermission","status","body","serviceWorker","ready","getSubscription","sub","unsubscribe","unsubscribed","class","Posts","method","title","userId","headers","Albums","loading","setLoading","albums","setAlbums","setError","useEffect","getAlbums","album","App","basename","to","path","initialStateSearch","initialStateRobots","rootReducers","createLogger","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","addEventListener","register","process","registrationError"],"mappings":"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","file":"static/js/main.69ea7e71.chunk.js","sourcesContent":["import { apiCall } from './api/api'\nimport {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants'\n\n\nexport const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING })\n  apiCall('https://jsonplaceholder.typicode.com/users')\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}","export const apiCall = (link) =>\n  fetch(link).then(response => response.json())","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        aria-label='Search Robots'\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, requestRobots } from '../actions';\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nimport './App.css';\n\n// parameter state comes from index.js provider store state(rootReducers)\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending\n  }\n}\n\n// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\n// the function returns an object then uses connect to change the data from redecers.\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\nclass Home extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { robots, searchField, onSearchChange, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          { isPending ? <h1>Loading</h1> :\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          }\n        </Scroll>\n      </div>\n    );\n  }\n}\n\n// action done from mapDispatchToProps will channge state from mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nfunction Geolocation() {\n  const [location, setLocation] = useState({\n    longitude: 0,\n    latitude: 0\n  });\n\n  const showPosition = (position) => {\n    console.log('show position', position);\n    setLocation({\n      longitude: position.coords.longitude,\n      latitude: position.coords.latitude\n    })\n  }\n\n  const manageError = (err) => {\n    console.log('error get geolocation', err);\n  }\n\n  const getGeolocation = () => {\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition, manageError, {timeout: 10000});\n    } else {\n      console.log(\"Geolocation is not supported by your browser\");\n    }\n  }\n\n  return (\n      <div className='tc'>\n        <button onClick={getGeolocation}>Geolocation</button>\n        <p>Latitude: {location.latitude}</p>\n        <p>Longitude: {location.longitude}</p>\n      </div>\n  )\n}\n\nexport default Geolocation","import React from 'react';\n\nfunction Photo() {\n  let imageCapture = null;\n  let mediaStream = null;\n  let mediaStreamTrack = null;\n  const permissions = {\n    video: { \n     facingMode: { exact: \"environment\" } // rear camera\n     // facingMode: \"user\" // front camera\n    }\n  }\n  \n  navigator.mediaDevices.getUserMedia(permissions)\n    .then(function(stream) {\n      /* use the stream */\n      mediaStream = stream;\n      const video = document.querySelector('video');\n      video.srcObject = mediaStream;\n      video.onloadedmetadata = function(e) {\n        video.play();\n      };\n      mediaStreamTrack = mediaStream.getVideoTracks()[0];\n      \n      imageCapture = new ImageCapture(mediaStreamTrack);\n    })\n    .catch(function(err) {\n      /* handle the error */\n      console.error('getUserMedia() error', err);\n    });\n\n  const takePhoto = () => {\n    if (!imageCapture) { return; }\n    const img = document.querySelector('img');\n  \n    imageCapture.takePhoto()\n        .then(blob => {\n          img.src = URL.createObjectURL(blob);\n          img.onload = () => { URL.revokeObjectURL(img.src); }\n        })\n        .catch(error => console.error('takePhoto() error:', error));\n  }\n\n  return (\n      <div className='tc'>\n        <video width=\"320\" height=\"240\"></video>\n        <button onClick={takePhoto}>Take Photo</button>\n        <img alt=\"nothing to display\" width=\"240\" height=\"320\" />\n      </div>\n  )\n}\n\nexport default Photo","import React, {useState} from 'react';\n\nfunction PushNotification() {\n  const [subscription, setSubscription] = useState('');\n\n  const showNotification = () => {\n    Notification.requestPermission(function(status) {\n      console.log('Notification permission status:', status);\n      if (status === 'granted') {\n        // navigator.serviceWorker.ready.then(function(registration) {\n        //   registration.showNotification('Vibration Sample', {\n        //     body: 'Buzz! Buzz!',\n        //     icon: '/android-chrome-192x192.png',\n        //     vibrate: [100, 50, 100],\n        //     data: {\n        //       dateOfArrival: Date.now(),\n        //       primaryKey: 1\n        //     },\n        //     actions: [\n        //       {action: 'explore', title: 'Explore this new world'},\n        //       {action: 'close', title: 'Close notification'},\n        //     ]\n        //   });\n        // });\n        new Notification(\"title\", {body: \"notification body\"});\n      }\n    });\n  }\n\n  function urlB64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding)\n      .replace(/\\-/g, '+')\n      .replace(/_/g, '/');\n  \n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n  \n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  }\n  \n  function subscribeToPushManager(registration) {\n    console.log('subscribe to push manager', registration.pushManager);\n    registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlB64ToUint8Array(\"BL44QZGCmHVWyIs-czW26GZAPse0K2pS4-jtFvH4z72Uuo2W6G95NYOvv-y_bYHnGBYRb3oju_Hgl2c0Xtul4Gc\")\n    }).then(subscription => {\n      const subscriptionJson = JSON.stringify(subscription);\n      console.log('subscription json', subscriptionJson);\n      setSubscription(subscriptionJson);\n    }).catch(function (err) {\n      console.log('error in subcription: ', err);\n    });\n  }\n\n  const showSubscription = () => {\n      Notification.requestPermission(function(status) {\n      console.log('Notification permission status:', status);\n        if (status === 'granted') {\n          navigator.serviceWorker.ready.then(registration => {\n          registration.pushManager.getSubscription().then(sub => {\n            console.log('has already a subscription', sub);\n\n            if (sub) {\n              sub.unsubscribe().then(unsubscribed => {\n                if (unsubscribed) {\n                  console.log('unsubscribed', unsubscribed);\n                  subscribeToPushManager(registration);\n                }\n              })\n            } else {\n              subscribeToPushManager(registration);\n            }\n          });      \n        });\n      }\n    });\n  }\n\n  return (\n      <div className='tc'>\n        <button onClick={showNotification}>Display notification from client</button>\n        <button onClick={showSubscription}>Display subscription for server</button>\n        <input type=\"text\" class=\"w-100\" value={subscription} />\n      </div>\n  )\n}\n\nexport default PushNotification","import React from 'react';\n\nfunction Posts() {\n  const newPost = () => {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: 'foo',\n        body: 'bar',\n        userId: 1\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n    .then(response => response.json())\n    .then(json => console.log(\"POST post\", json))\n  }\n\n  return (\n      <div className='tc'>\n        <h1>Posts</h1>\n\n        <button onClick={newPost}>POST A NEW ONE</button>\n      </div>\n  )\n}\n\nexport default Posts","import React, { useState, useEffect } from 'react';\n\nfunction Albums() {\n  const [loading, setLoading] = useState(false);\n  const [albums, setAlbums] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getAlbums()  \n  }, [])\n\n  const getAlbums = () => {\n    setLoading(true);\n    setAlbums([]);\n    setError(null);\n    fetch('https://jsonplaceholder.typicode.com/albums')\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"GET albums\", data);\n        setLoading(false);\n        setAlbums(data);\n        setError(null);\n      })\n      .catch(err => {\n        setLoading(false);\n        setAlbums([]);\n        setError(err);\n      })\n  }\n\n  if (loading) {\n    return <p>Loading ...</p>\n  } else if (error) {\n    return <p>Error !!</p>\n  } else {\n    return (\n      <div className='tc'>\n        <h1>Albums</h1>\n        \n        { albums.map(album => <p key={album.id}>{album.title}</p>) }\n      </div>\n    )\n  } \n}\n\nexport default Albums","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './Home';\nimport Geolocation from './Geolocation';\nimport Photo from './Photo';\nimport PushNotification from './PushNotification';\nimport Posts from './Posts';\nimport Albums from './Albums';\n\nfunction App() {\n  return (\n    <Router basename=\"/robofriends\">\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/geolocation\">Geolocation</Link>\n            </li>\n            <li>\n              <Link to=\"/photo\">Photo</Link>\n            </li>\n            <li>\n              <Link to=\"/notification\">Notification</Link>\n            </li>\n            <li>\n              <Link to=\"/posts\">Posts</Link>\n            </li>\n            <li>\n              <Link to=\"/albums\">Albums</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/geolocation\">\n            <Geolocation />\n          </Route>\n          <Route path=\"/photo\">\n            <Photo />\n          </Route>\n          <Route path=\"/notification\">\n            <PushNotification />\n          </Route>\n          <Route path=\"/posts\">\n            <Posts />\n          </Route>\n          <Route path=\"/albums\">\n            <Albums />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {searchField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateRobots = {\n  robots: [],\n  isPending: true\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {robots: action.payload, isPending: false})\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport 'tachyons';\n\nimport App from './containers/App';\n// import * as serviceWorker from './serviceWorker';\nimport { requestRobots, searchRobots } from './reducers'\n\nimport './index.css';\n\nconst logger = createLogger()\n\nconst rootReducers = combineReducers({requestRobots, searchRobots})\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware /*, logger */))\n\nconsole.log('trethgrt');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/sw.js`).then(registration => {\n      console.log('SW registered: ', registration);\n    }).catch(registrationError => {\n      console.log('SW registration failed: ', registrationError);\n    });\n  });\n}"],"sourceRoot":""}