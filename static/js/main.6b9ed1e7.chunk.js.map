{"version":3,"sources":["containers/App.js","reducers.js","index.js","constants.js"],"names":["imageCapture","mediaStream","mediaStreamTrack","navigator","mediaDevices","getUserMedia","video","facingMode","exact","then","stream","document","querySelector","srcObject","onloadedmetadata","e","play","getVideoTracks","ImageCapture","catch","err","console","error","App","useState","longitude","latitude","location","setLocation","showPosition","position","coords","getSupportedConstraints","className","width","height","onClick","img","takePhoto","blob","src","URL","createObjectURL","onload","revokeObjectURL","geolocation","getCurrentPosition","log","initialStateSearch","searchField","initialStateRobots","robots","isPending","rootReducers","createLogger","combineReducers","requestRobots","state","action","type","Object","assign","payload","searchRobots","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","window","addEventListener","serviceWorker","register","process","registration","pushManager","subscribe","userVisibleOnly","registrationError"],"mappings":"mRAGIA,G,MAAe,MACfC,EAAc,KACdC,EAAmB,KAOvBC,UAAUC,aAAaC,aANH,CAClBC,MAAO,CACLC,WAAY,CAAEC,MAAO,kBAKtBC,MAAK,SAASC,GAEbT,EAAcS,EACd,IAAMJ,EAAQK,SAASC,cAAc,SACrCN,EAAMO,UAAYZ,EAClBK,EAAMQ,iBAAmB,SAASC,GAChCT,EAAMU,QAERd,EAAmBD,EAAYgB,iBAAiB,GAEhDjB,EAAe,IAAIkB,aAAahB,MAEjCiB,OAAM,SAASC,GAEdC,QAAQC,MAAM,uBAAwBF,MAyD3BG,MAtDf,WAAgB,IAAD,EACmBC,mBAAS,CACvCC,UAAW,EACXC,SAAU,IAHC,mBACNC,EADM,KACIC,EADJ,KAkBPC,EAAe,SAACC,GACpBF,EAAY,CACVH,UAAWK,EAASC,OAAON,UAC3BC,SAAUI,EAASC,OAAOL,YAa9B,OAD6BvB,UAAUC,aAAa4B,0BAEhD,yBAAKC,UAAU,MACb,wBAAIA,UAAU,MAAd,OACA,2BAAOC,MAAM,MAAMC,OAAO,QAC1B,4BAAQC,QAhCI,WAChB,GAAKpC,EAAL,CACA,IAAMqC,EAAM1B,SAASC,cAAc,OAEnCZ,EAAasC,YACR7B,MAAK,SAAA8B,GACJF,EAAIG,IAAMC,IAAIC,gBAAgBH,GAC9BF,EAAIM,OAAS,WAAQF,IAAIG,gBAAgBP,EAAIG,SAE9CrB,OAAM,SAAAG,GAAK,OAAID,QAAQC,MAAM,qBAAsBA,SAuBpD,cACA,4BAAQc,QAdS,WAClBjC,UAAU0C,YACX1C,UAAU0C,YAAYC,mBAAmBjB,GAEzCR,QAAQ0B,IAAI,2CAUV,eACA,yBAAKb,MAAM,MAAMC,OAAO,QACxB,wCAAcR,EAASD,UACvB,yCAAeC,EAASF,aCjE1BuB,EAAqB,CACzBC,YAAa,IAYTC,EAAqB,CACzBC,OAAQ,GACRC,WAAW,GCNPC,G,MAFSC,yBAEMC,YAAgB,CAACC,cDST,WAA0C,IAAzCC,EAAwC,uDAAlCP,EAAoBQ,EAAc,uDAAP,GAC7D,OAAQA,EAAOC,MACb,IEzBkC,yBF0BhC,OAAOC,OAAOC,OAAO,GAAIJ,EAAO,CAACL,WAAW,IAC9C,IE1BkC,yBF2BhC,OAAOQ,OAAOC,OAAO,GAAIJ,EAAO,CAACN,OAAQO,EAAOI,QAASV,WAAW,IACtE,IE3BiC,wBF4B/B,OAAOQ,OAAOC,OAAO,GAAIJ,EAAO,CAACnC,MAAOoC,EAAOI,UACjD,QACE,OAAOL,IClBwCM,aDLzB,WAA0C,IAAzCN,EAAwC,uDAAlCT,EAAoBU,EAAc,uDAAP,GAC5D,OAAQA,EAAOC,MACb,IEb8B,qBFc5B,OAAOC,OAAOC,OAAO,GAAIJ,EAAO,CAACR,YAAaS,EAAOI,UACvD,QACE,OAAOL,OCEPO,EAAQC,YAAYZ,EAAca,YAAgBC,MAExDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFrD,SAAS2D,eAAe,SAOtB,kBAAmBnE,WACrBoE,OAAOC,iBAAiB,QAAQ,WAC9BrE,UAAUsE,cAAcC,SAAxB,UAAoCC,eAApC,WAAoElE,MAAK,SAAAmE,GACvEvD,QAAQ0B,IAAI,kBAAmB6B,GAC/BA,EAAaC,YAAYC,UAAU,CAACC,iBAAiB,OACpD5D,OAAM,SAAA6D,GACP3D,QAAQ0B,IAAI,2BAA4BiC,W","file":"static/js/main.6b9ed1e7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nlet imageCapture = null;\nlet mediaStream = null;\nlet mediaStreamTrack = null;\nconst permissions = {\n  video: { \n    facingMode: { exact: \"environment\" } // rear camera\n  }\n}\n\nnavigator.mediaDevices.getUserMedia(permissions)\n  .then(function(stream) {\n    /* use the stream */\n    mediaStream = stream;\n    const video = document.querySelector('video');\n    video.srcObject = mediaStream;\n    video.onloadedmetadata = function(e) {\n      video.play();\n    };\n    mediaStreamTrack = mediaStream.getVideoTracks()[0];\n    \n    imageCapture = new ImageCapture(mediaStreamTrack);\n  })\n  .catch(function(err) {\n    /* handle the error */\n    console.error('getUserMedia() error', err);\n  });\n\nfunction App() {\n  const [location, setLocation] = useState({\n    longitude: 0,\n    latitude: 0\n  });\n\n  const takePhoto = () => {\n    if (!imageCapture) { return; }\n    const img = document.querySelector('img');\n  \n    imageCapture.takePhoto()\n        .then(blob => {\n          img.src = URL.createObjectURL(blob);\n          img.onload = () => { URL.revokeObjectURL(img.src); }\n        })\n        .catch(error => console.error('takePhoto() error:', error));\n  }\n\n  const showPosition = (position) => {\n    setLocation({\n      longitude: position.coords.longitude,\n      latitude: position.coords.latitude\n    })\n  }\n\n  const getGeolocation = () => {\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      console.log(\"Geo Location not supported by browser\");\n    }\n  }\n\n  const supportedConstraints = navigator.mediaDevices.getSupportedConstraints();\n  return (\n      <div className='tc'>\n        <h1 className='f1'>PWA</h1>\n        <video width=\"320\" height=\"240\"></video>\n        <button onClick={takePhoto}>Take Photo</button>\n        <button onClick={getGeolocation}>Geolocation</button>\n        <img width=\"320\" height=\"240\" />\n        <p>Latitude: {location.latitude}</p>\n        <p>Longitude: {location.longitude}</p>\n        {/* <div id=\"constraintList\">\n        {\n          Object.keys(supportedConstraints).map((constraint) => {\n            return (<code>{constraint}<br></br></code>);\n          })\n        }\n        </div> */}\n      </div>\n  )\n}\n\nexport default App\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {searchField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateRobots = {\n  robots: [],\n  isPending: true\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {robots: action.payload, isPending: false})\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport 'tachyons';\n\nimport App from './containers/App';\n// import * as serviceWorker from './serviceWorker';\nimport { requestRobots, searchRobots } from './reducers'\n\nimport './index.css';\n\nconst logger = createLogger()\n\nconst rootReducers = combineReducers({requestRobots, searchRobots})\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware /*, logger */))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/sw.js`).then(registration => {\n      console.log('SW registered: ', registration);\n      registration.pushManager.subscribe({userVisibleOnly: true});\n    }).catch(registrationError => {\n      console.log('SW registration failed: ', registrationError);\n    });\n  });\n}","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';"],"sourceRoot":""}