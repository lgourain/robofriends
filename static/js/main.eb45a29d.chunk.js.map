{"version":3,"sources":["actions.js","api/api.js","constants.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/Home.js","containers/Geolocation.js","containers/Photo.js","containers/PushNotification.js","containers/App.js","reducers.js","index.js"],"names":["requestRobots","dispatch","link","type","fetch","then","response","json","data","payload","catch","error","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","aria-label","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","info","this","setState","Component","Home","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","ErrorBoundry","connect","searchRobots","event","target","value","Geolocation","useState","longitude","latitude","location","setLocation","showPosition","position","coords","onClick","navigator","geolocation","getCurrentPosition","console","log","Photo","imageCapture","mediaStream","mediaStreamTrack","mediaDevices","getUserMedia","video","facingMode","exact","stream","document","querySelector","srcObject","onloadedmetadata","e","play","getVideoTracks","ImageCapture","err","width","img","takePhoto","blob","URL","createObjectURL","onload","revokeObjectURL","PushNotification","Notification","requestPermission","result","serviceWorker","ready","registration","showNotification","body","icon","vibrate","dateOfArrival","Date","now","primaryKey","actions","action","title","App","basename","to","path","initialStateSearch","initialStateRobots","rootReducers","createLogger","combineReducers","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","status","window","addEventListener","register","process","applicationServerKey","btoa","pushManager","subscribe","userVisibleOnly","subscription","endpoint","registrationError"],"mappings":"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","file":"static/js/main.eb45a29d.chunk.js","sourcesContent":["import { apiCall } from './api/api'\nimport {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants'\n\n\nexport const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING })\n  apiCall('https://jsonplaceholder.typicode.com/users')\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}","export const apiCall = (link) =>\n  fetch(link).then(response => response.json())","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        aria-label='Search Robots'\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, requestRobots } from '../actions';\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nimport './App.css';\n\n// parameter state comes from index.js provider store state(rootReducers)\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending\n  }\n}\n\n// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\n// the function returns an object then uses connect to change the data from redecers.\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\nclass Home extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { robots, searchField, onSearchChange, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          { isPending ? <h1>Loading</h1> :\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          }\n        </Scroll>\n      </div>\n    );\n  }\n}\n\n// action done from mapDispatchToProps will channge state from mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import React, { useState } from 'react';\n\nfunction Geolocation() {\n  const [location, setLocation] = useState({\n    longitude: 0,\n    latitude: 0\n  });\n\n  const showPosition = (position) => {\n    setLocation({\n      longitude: position.coords.longitude,\n      latitude: position.coords.latitude\n    })\n  }\n\n  const getGeolocation = () => {\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      console.log(\"Geolocation is not supported by your browser\");\n    }\n  }\n\n  return (\n      <div className='tc'>\n        <button onClick={getGeolocation}>Geolocation</button>\n        <p>Latitude: {location.latitude}</p>\n        <p>Longitude: {location.longitude}</p>\n      </div>\n  )\n}\n\nexport default Geolocation","import React from 'react';\n\nfunction Photo() {\n  let imageCapture = null;\n  let mediaStream = null;\n  let mediaStreamTrack = null;\n  const permissions = {\n    video: { \n     facingMode: { exact: \"environment\" } // rear camera\n     // facingMode: \"user\" // front camera\n    }\n  }\n  \n  navigator.mediaDevices.getUserMedia(permissions)\n    .then(function(stream) {\n      /* use the stream */\n      mediaStream = stream;\n      const video = document.querySelector('video');\n      video.srcObject = mediaStream;\n      video.onloadedmetadata = function(e) {\n        video.play();\n      };\n      mediaStreamTrack = mediaStream.getVideoTracks()[0];\n      \n      imageCapture = new ImageCapture(mediaStreamTrack);\n    })\n    .catch(function(err) {\n      /* handle the error */\n      console.error('getUserMedia() error', err);\n    });\n\n  const takePhoto = () => {\n    if (!imageCapture) { return; }\n    const img = document.querySelector('img');\n  \n    imageCapture.takePhoto()\n        .then(blob => {\n          img.src = URL.createObjectURL(blob);\n          img.onload = () => { URL.revokeObjectURL(img.src); }\n        })\n        .catch(error => console.error('takePhoto() error:', error));\n  }\n\n  return (\n      <div className='tc'>\n        <video width=\"320\" height=\"240\"></video>\n        <button onClick={takePhoto}>Take Photo</button>\n        <img alt=\"photo taken\" width=\"240\" height=\"320\" />\n      </div>\n  )\n}\n\nexport default Photo","import React from 'react';\n\nfunction PushNotification() {\n  const showNotification = () => {\n    Notification.requestPermission(function(result) {\n      if (result === 'granted') {\n        navigator.serviceWorker.ready.then(function(registration) {\n          registration.showNotification('Vibration Sample', {\n            body: 'Buzz! Buzz!',\n            icon: '/android-chrome-192x192.png',\n            vibrate: [100, 50, 100],\n            data: {\n              dateOfArrival: Date.now(),\n              primaryKey: 1\n            },\n            actions: [\n              {action: 'explore', title: 'Explore this new world'},\n              {action: 'close', title: 'Close notification'},\n            ]\n          });\n        });\n      }\n    });\n  }\n\n  return (\n      <div className='tc'>\n        <button onClick={showNotification}>Display notification</button>\n      </div>\n  )\n}\n\nexport default PushNotification","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './Home';\nimport Geolocation from './Geolocation';\nimport Photo from './Photo';\nimport PushNotification from './PushNotification';\n\nfunction App() {\n  return (\n    <Router basename=\"/robofriends\">\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/geolocation\">Geolocation</Link>\n            </li>\n            <li>\n              <Link to=\"/photo\">Photo</Link>\n            </li>\n            <li>\n              <Link to=\"/notification\">Notification</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/geolocation\">\n            <Geolocation />\n          </Route>\n          <Route path=\"/photo\">\n            <Photo />\n          </Route>\n          <Route path=\"/notification\">\n            <PushNotification />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {searchField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateRobots = {\n  robots: [],\n  isPending: true\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {robots: action.payload, isPending: false})\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport 'tachyons';\n\nimport App from './containers/App';\n// import * as serviceWorker from './serviceWorker';\nimport { requestRobots, searchRobots } from './reducers'\n\nimport './index.css';\n\nconst logger = createLogger()\n\nconst rootReducers = combineReducers({requestRobots, searchRobots})\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware /*, logger */))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\nconsole.log('ezf');\n\nNotification.requestPermission(function(status) {\n  console.log('Notification permission status:', status);\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/sw.js`).then(registration => {\n      console.log('SW registered: ', registration);\n\n      const applicationServerKey = btoa(\"AAAAhATvIiM:APA91bGUPAUBJ-DStQgbPnhrinv6Pira7UF_f-1Ys2kjExwJUrpl11ezYlVV5hQ3EO4htk2qtu_HfKL9c90OYPKvQivBRZtG-3WPeZX8hSjbvVKoQhEHlqbzCAdnVueW319EmO-SZZpr\");\n      registration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey,\n      }).then(subscription => {\n        console.log('ENDPOINT: ', subscription.endpoint);\n      }).catch(function (err) {\n        console.log('error in subcription: ', err);\n      });\n      \n    }).catch(registrationError => {\n      console.log('SW registration failed: ', registrationError);\n    });\n  });\n}"],"sourceRoot":""}