{"version":3,"sources":["actions.js","api/api.js","constants.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reducers.js","index.js"],"names":["requestRobots","dispatch","link","type","fetch","then","response","json","data","payload","catch","error","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","aria-label","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","info","this","setState","Component","imageCapture","navigator","mediaDevices","getUserMedia","video","facingMode","exact","mediaStream","console","log","document","querySelector","srcObject","onloadedmetadata","e","play","mediaStreamTrack","getVideoTracks","ImageCapture","err","takePhoto","img","blob","URL","createObjectURL","onload","revokeObjectURL","App","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","width","onClick","ErrorBoundry","connect","searchRobots","event","target","value","initialStateSearch","initialStateRobots","rootReducers","createLogger","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","window","addEventListener","serviceWorker","register","process","registration","pushManager","subscribe","userVisibleOnly","registrationError"],"mappings":"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","file":"static/js/main.d2b86128.chunk.js","sourcesContent":["import { apiCall } from './api/api'\nimport {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants'\n\n\nexport const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING })\n  apiCall('https://jsonplaceholder.typicode.com/users')\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}","export const apiCall = (link) =>\n  fetch(link).then(response => response.json())","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              id={robots[i].id}\n              name={robots[i].name}\n              email={robots[i].email}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        aria-label='Search Robots'\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, requestRobots } from '../actions';\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nimport './App.css';\n\n// parameter state comes from index.js provider store state(rootReducers)\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending\n  }\n}\n\n// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\n// the function returns an object then uses connect to change the data from redecers.\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\nlet imageCapture = null;\n\nnavigator.mediaDevices.getUserMedia({video: { facingMode: { exact: \"environment\" } }})\n  .then(function(mediaStream) {\n    /* use the stream */\n    console.log('mediaStream', mediaStream);\n    var video = document.querySelector('video');\n    video.srcObject = mediaStream;\n    video.onloadedmetadata = function(e) {\n      console.log('video play');\n      video.play();\n    };\n    \n    const mediaStreamTrack = mediaStream.getVideoTracks()[0];\n    imageCapture = new ImageCapture(mediaStreamTrack);\n    console.log(imageCapture);\n  })\n  .catch(function(err) {\n    /* handle the error */\n    console.log('error', err);\n  });\n\nconst takePhoto = () => {\n  const img = document.querySelector('img');\n\n  imageCapture.takePhoto()\n      .then(blob => {\n        img.src = URL.createObjectURL(blob);\n        img.onload = () => { URL.revokeObjectURL(img.src); }\n      })\n      .catch(error => console.error('takePhoto() error:', error));\n}\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { robots, searchField, onSearchChange, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <video width=\"320\" height=\"240\"></video>\n        <button onClick={takePhoto}>Take Photo</button>\n        <img width=\"320\" height=\"240\" />\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          { isPending ? <h1>Loading</h1> :\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          }\n        </Scroll>\n      </div>\n    );\n  }\n}\n\n// action done from mapDispatchToProps will channge state from mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n } from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {searchField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateRobots = {\n  robots: [],\n  isPending: true\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {robots: action.payload, isPending: false})\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport 'tachyons';\n\nimport App from './containers/App';\n// import * as serviceWorker from './serviceWorker';\nimport { requestRobots, searchRobots } from './reducers'\n\nimport './index.css';\n\nconst logger = createLogger()\n\nconst rootReducers = combineReducers({requestRobots, searchRobots})\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware /*, logger */))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/sw.js`).then(registration => {\n      console.log('SW registered: ', registration);\n      registration.pushManager.subscribe({userVisibleOnly: true});\n    }).catch(registrationError => {\n      console.log('SW registration failed: ', registrationError);\n    });\n  });\n}"],"sourceRoot":""}